;; -*- mode: common-lisp; coding: utf-8 -*-
(in-package :hhub)

(clsql:def-view-class dod-currncy ()
  ((country 
    :accessor country
    :type (string 100)
    :initarg :country)

   (currency
    :accessor currency
    :type (string 20)
    :initarg :currency)

   (code
    :accessor code
    :type (string 10)
    :initarg :code)

   (curr-symbol
    :accessor curr-symbol
    :type (string 5)
    :initarg :curr-symbol))
      
  (:BASE-TABLE dod_currency))


(defun get-currency-fontawesome-map ()
  (let ((curr-fa-symbols (list (list "INR" "fa-solid fa-indian-rupee-sign")
			       (list "USD" "fa-solid fa-dollar-sign")))
	(ht (make-hash-table :test 'equal)))
    (loop for curr in curr-fa-symbols do
      (setf (gethash (car curr) ht) (second curr)))
    ht))

         
    

(defun get-currency-html-symbol-map ()
  (let ((curr-html-symbols (list (list "AED" "&#1583;.&#1573;")
				 (list "AFN"  "&#65;&#102;")
				 (list "ALL"  "&#76;&#101;&#107;")
				 (list "AMD"  "&#1380;")
				 (list "ANG"  "&#402;")
				 (list "AOA"  "&#75;&#122;")
				 (list "ARS"  "&#36;")
				 (list "AUD"  "&#36;")
				 (list "AWG"  "&#402;")
				 (list "AZN"  "&#8380;")
				 (list "BAM"  "&#75;&#77;")
				 (list "BBD"  "&#36;")
				 (list "BDT"  "&#2547;")
				 (list "BGN"  "&#1083;&#1074;")
				 (list "BHD"  ".&#1583;.&#1576;")
				 (list "BIF"  "&#70;&#66;&#117;")
				 (list "BMD"  "&#36;")
				 (list 	"BND"  "&#36;")
				 (list 	"BOB"  "&#36;&#98;")
				 (list 	"BRL"  "&#82;&#36;")
				 (list 	"BSD"  "&#36;")
				 (list 	"BTN"  "&#78;&#117;&#46;")
				 (list 	"BWP"  "&#80;")
				 (list 	"BYR"  "&#112;&#46;")
				 (list 	"BZD"  "&#66;&#90;&#36;")
				 (list 	"CAD"  "&#36;")
				 (list 	"CDF"  "&#70;&#67;")
				 (list 	"CF"  "&#67;&#72;&#70;")
				 (list 	"CLF"  "&#85;&#70;")
				 (list 	"CLP"  "&#36;")
				 (list 	"CNY"  "&#165;")
				 (list 	"COP"  "&#36;")
				 (list 	"CRC"  "&#8353;")
				 (list 	"CUP"  "&#8396;")
				 (list 	"CVE"  "&#36;")
				 (list 	"CZK"  "&#75;&#269;")
				 (list 	"DJF"  "&#70;&#100;&#106;")
				 (list 	"DKK"  "&#107;&#114;")
				 (list 	"DOP"  "&#82;&#68;&#36;")
				 (list 	"DZD"  "&#1583;&#1580;")
				 (list 	"EGP"  "E&#163;")
				 (list 	"ETB"  "&#66;&#114;")
				 (list 	"EUR"  "&#8364;")
				 (list 	"FJD"  "&#36;")
				 (list 	"FKP"  "&#163;")
				 (list 	"GBP"  "&#163;")
				 (list 	"GEL"  "&#4314;")
				 (list 	"GHS"  "&#162;")
				 (list 	"GIP"  "&#163;" )
				 (list 	"GMD"  "&#68;") 
				 (list 	"GNF"  "&#70;&#71;") 
				 (list 	"GTQ"  "&#81;" )
				 (list 	"GYD"  "&#36;")
				 (list 	"HKD"  "&#36;")
				 (list 	"HNL"  "&#76;")
				 (list 	"HRK"  "&#107;&#110;")
				 (list 	"HTG"  "&#71;") 
				 (list 	"HUF"  "&#70;&#116;")
				 (list 	"IDR"  "&#82;&#112;")
				 (list 	"ILS"  "&#8362;")
				 (list 	"INR"  "&#8377;")
				 (list 	"IQD"  "&#1593;.&#1583;") 
				 (list 	"IRR"  "&#65020;")
				 (list 	"ISK"  "&#107;&#114;")
				 (list 	"JEP"  "&#163;")
				 (list 	"JMD"  "&#74;&#36;")
				 (list 	"JOD"  "&#74;&#68;") 
				 (list 	"JPY"  "&#165;")
				 (list 	"KES"  "&#75;&#83;&#104;") 
				 (list 	"KGS"  "&#1083;&#1074;")
				 (list 	"KHR"  "&#6107;")
				 (list 	"KMF"  "&#67;&#70;") 
				 (list 	"KPW"  "&#8361;")
				 (list 	"KRW"  "&#8361;")
				 (list 	"KWD"  "&#1583;.&#1603;") 
				 (list 	"KYD"  "&#36;")
				 (list 	"KZT"  "&#8376;")
				 (list 	"LAK"  "&#8365;")
				 (list 	"LBP"  "&#163;")
				 (list 	"LKR"  "&#8360;")
				 (list 	"LRD"  "&#36;")
				 (list 	"LSL"  "&#76;") 
				 (list 	"LTL"  "&#76;&#116;")
				 (list 	"LVL"  "&#76;&#115;")
				 (list 	"LYD"  "&#1604;.&#1583;") 
				 (list 	"MAD"  "&#1583;.&#1605;.")
				 (list 	"MDL"  "&#76;")
				 (list 	"MGA"  "&#65;&#114;") 
				 (list 	"MKD"  "&#1076;&#1077;&#1085;")
				 (list 	"MMK"  "&#75;")
				 (list 	"MNT"  "&#8366;")
				 (list 	"MOP"  "&#77;&#79;&#80;&#36;") 
				 (list 	"MRO"  "&#85;&#77;") 
				 (list 	"MUR"  "&#8360;") 
				 (list 	"MVR"  ".&#1923;") 
				 (list 	"MWK"  "&#77;&#75;")
				 (list 	"MXN"  "&#36;")
				 (list 	"MYR"  "&#82;&#77;")
				 (list 	"MZN"  "&#77;&#84;")
				 (list 	"NAD"  "&#36;")
				 (list 	"NGN"  "&#8358;")
				 (list 	"NIO"  "&#67;&#36;")
				 (list 	"NOK"  "&#107;&#114;")
				 (list 	"NPR"  "&#8360;")
				 (list 	"NZD"  "&#36;")
				 (list 	"OMR"  "&#65020;")
				 (list 	"PAB"  "&#66;&#47;&#46;")
				 (list 	"PEN"  "&#83;&#47;&#46;")
				 (list 	"PGK"  "&#75;") 
				 (list 	"PHP"  "&#8369;")
				 (list 	"PKR"  "&#8360;")
				 (list 	"PLN"  "&#122;&#322;")
				 (list 	"PYG"  "&#71;&#115;")
				 (list 	"QAR"  "&#65020;")
				 (list 	"RON"  "&#108;&#101;&#105;")
				 (list 	"RSD"  "&#1044;&#1080;&#1085;&#46;")
				 (list 	"RUB"  "&#8381;")
				 (list 	"RWF"  "&#1585;.&#1587;")
				 (list 	"SAR"  "&#65020;")
				 (list 	"SBD"  "&#36;")
				 (list 	"SCR"  "&#8360;")
				 (list 	"SDG"  "&#163;") 
				 (list 	"SEK"  "&#107;&#114;")
				 (list 	"SGD"  "&#36;")
				 (list 	"SHP"  "&#163;")
				 (list 	"SLL"  "&#76;&#101;") 
				 (list 	"SOS"  "&#83;")
				 (list 	"SRD"  "&#36;")
				 (list 	"STD"  "&#68;&#98;") 
				 (list 	"SVC"  "&#36;")
				 (list 	"SYP"  "&#163;")
				 (list 	"SZL"  "&#76;") 
				 (list 	"THB"  "&#3647;")
				 (list 	"TJS"  "&#84;&#74;&#83;")
				 (list 	"TMT"  "&#109;")
				 (list 	"TND"  "&#1583;.&#1578;")
				 (list 	"TOP"  "&#84;&#36;")
				 (list 	"TRY"  "&#x20BA;") 
				 (list 	"TTD"  "&#36;")
				 (list 	"TWD"  "&#78;&#84;&#36;")
				 (list 	"TZS"  "&#84;&#83;&#104;")
				 (list 	"UAH"  "&#8372;")
				 (list 	"UGX"  "&#85;&#83;&#104;")
				 (list 	"USD"  "&#36;")
				 (list 	"UYU"  "&#36;&#85;")
				 (list 	"UZS"  "&#1083;&#1074;")
				 (list 	"VEF"  "&#66;&#115;")
				 (list 	"VND"  "&#8363;")
				 (list 	"VUV"  "&#86;&#84;")
				 (list 	"WST"  "&#87;&#83;&#36;")
				 (list 	"XAF"  "&#70;&#67;&#70;&#65;")
				 (list 	"XCD"  "&#36;")
				 (list 	"XDR"  "&#83;&#68;&#82;")
				 (list 	"XOF"  "&#70;&#67;&#70;&#65;")
				 (list 	"XPF"  "&#70;")
				 (list 	"YER"  "&#65020;")
				 (list 	"ZAR"  "&#82;")
				 (list 	"ZMK"  "&#90;&#75;") 
				 (list 	"ZWL"  "&#90;&#36;")))
			   (ht (make-hash-table :test 'equal)))
    (loop for curr in curr-html-symbols do
      (setf (gethash (car curr) ht) (second curr)))
    ht))


(defun get-system-UOM-map ()
  (let ((uom-map (list
		  (list "PCS" "Piece")
		  (list "KG" "Kilogram")
		  (list "G" "Gram")
		  (list "MG" "Milligram")
		  (list "L" "Liter")
		  (list "ML" "Milliliter")
		  (list "M" "Meter")
		  (list "CM" "Centimeter")
		  (list "MM" "Millimeter")
		  (list "KM" "Kilometer")
		  (list "IN" "Inch")
		  (list "FT" "Foot")
		  (list "YD" "Yard")
		  (list "SQM" "Square Meter")
		  (list "SQCM" "Square Centimeter")
		  (list "SQIN" "Square Inch")
		  (list "HA" "Hectare")
		  (list "ACRE" "Acre")
		  (list "MT" "Metric Ton")
		  (list "TON" "Ton")
		  (list "LB" "Pound")
		  (list "OZ" "Ounce")
		  (list "GAL" "Gallon")
		  (list "QT" "Quart")
		  (list "PT" "Pint")
		  (list "CUP" "Cup")
		  (list "TBSP" "Tablespoon")
		  (list "TSP" "Teaspoon")
		  (list "BOX" "Box")
		  (list "PACK" "Pack")
		  (list "ROLL" "Roll")
		  (list "BAG" "Bag")
		  (list "SET" "Set")
		  (list "PAIR" "Pair")
		  (list "DOZ" "Dozen")
		  (list "HUN" "Hundred")
		  (list "THOU" "Thousand")
		  (list "BARREL" "Barrel")
		  (list "CAN" "Can")
		  (list "BOTTLE" "Bottle")
		  (list "JAR" "Jar")
		  (list "CASE" "Case")
		  (list "SHEET" "Sheet")
		  (list "PALLET" "Pallet")
		  (list "TRAY" "Tray")
		  (list "CARTON" "Carton")
		  (list "BOXES" "Boxes")
		  (list "TUBE" "Tube")
		  (list "CYL" "Cylinder")
		  (list "LBS" "Pounds")
		  (list "GR" "Grain")
		  (list "DR" "Dram")
		  (list "TONNE" "Tonne")
		  (list "CT" "Carat")
		  (list "MICROG" "Microgram")
		  (list "DECAG" "Decagram")
		  (list "HECTOG" "Hectogram")
		  (list "N" "Newton")
		  (list "LBSF" "Pound-Force")
		  (list "MGAL" "Milligallon")
		  (list "CC" "Cubic Centimeter")
		  (list "CUFT" "Cubic Foot")
		  (list "CUM" "Cubic Meter")
		  (list "CUBICMM" "Cubic Millimeter")
		  (list "DCL" "Deciliter")
		  (list "HL" "Hectoliter")
		  (list "DRUM" "Drum")
		  (list "KWH" "Kilowatt-Hour")
		  (list "MW" "Megawatt")
		  (list "JOULE" "Joule")
		  (list "CAL" "Calorie")
		  (list "BTU" "British Thermal Unit")
		  (list "THERM" "Therm")
		  (list "KCAL" "Kilocalorie")
		  (list "MLB" "Mega Pound")
		  (list "CWT" "Hundredweight")
		  (list "ST" "Stone")
		  (list "QUINTAL" "Quintal")
		  (list "DL" "Deciliter")
		  (list "NANOSEC" "Nanosecond")
		  (list "MICROSEC" "Microsecond")
		  (list "MILLISEC" "Millisecond")
		  (list "SEC" "Second")
		  (list "MIN" "Minute")
		  (list "HR" "Hour")
		  (list "DAY" "Day")
		  (list "WK" "Week")
		  (list "MO" "Month")
		  (list "YR" "Year")
		  (list "DECADE" "Decade")
		  (list "CENTURY" "Century")
		  (list "REEL" "Reel")
		  (list "BLOCK" "Block")
		  (list "CASK" "Cask")
		  (list "ROLLS" "Rolls")
		  (list "SACK" "Sack")
		  (list "BALE" "Bale")
		  (list "VIAL" "Vial")
		  (list "AMP" "Ampoule")
		  (list "STRIP" "Strip")
		  (list "BLISTER" "Blister Pack")
		  (list "PLT" "Plate")
		  (list "CONTAINER" "Container")
		  (list "SHRINK" "Shrink Wrap")
		  (list "TANK" "Tank")))
	(ht (make-hash-table :test 'equal)))
    (loop for uom in uom-map do 
      (setf (gethash (car uom) ht) (second uom)))
    ht))

